
const unsigned char ImageBuffer[3498] = {0x42,0x4d,0xaa,0x0d,0,0,0,0,0,0,0x36,0,0,0,0x28,0,0,0,0x2a,0,0,0,0x29,0,0,0,0x01,0,0x10,0,0x03,0, 0,0,0x74,0x0d,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdf,0xf7,0x5e,0xe7,0xff,0xff, 0xff,0xff,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xd2,0x3a,0xbe,0xc6,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xf7,0x11,0x22,0xb0,0x11,0x19,0x95,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0c,0x09,0x73,0x32,0x8a,0,0x33,0x63, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x08,0,0x38,0x95, 0x79,0xa5,0x07,0,0xac,0x29,0x7f,0xef,0xff,0xff,0xde,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0x06,0,0xb6,0x94,0xff,0xff,0x9d,0xce,0x48,0,0x28,0,0x5b,0xc6,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0x07,0,0x96,0x84,0xbf,0xef,0x9f,0xef,0x3f,0xdf,0x6c,0x21, 0x07,0,0xb6,0x94,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0,0x76,0x7c,0x3e,0xdf,0xdd,0xd6, 0xfd,0xd6,0x9f,0xe7,0xf2,0x52,0x06,0,0x11,0x5b,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x48,0,0x36,0x74, 0xdd,0xd6,0x7b,0xc6,0x9c,0xc6,0x7b,0xbe,0x1e,0xd7,0x77,0x7c,0x08,0,0xcd,0x29, 0xbf,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xdf,0xff,0x7f,0xef,0x7f,0xef,0x9f,0xef,0x9f,0xef,0x9f,0xef,0x9f,0xef, 0x7f,0xef,0x9f,0xef,0x7f,0xef,0x9f,0xef,0x9f,0xef,0x9f,0xef,0x9f,0xef,0xbf,0xef, 0x89,0,0x36,0x74,0x7c,0xc6,0x7b,0xc6,0x5b,0xbe,0x5b,0xc6,0x5b,0xbe,0xdd,0xc6, 0x9b,0x9d,0xcc,0x08,0xc9,0x08,0x9c,0xce,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0x37,0x9d,0xab,0,0xcb,0,0xcb,0,0xab,0, 0xcc,0,0xcb,0,0xcb,0,0xcb,0,0xcb,0,0xcb,0,0xcb,0,0xcb,0, 0xcb,0,0xcb,0,0x6b,0,0xf5,0x6b,0x7c,0xc6,0x1a,0xb6,0x3b,0xbe,0x3a,0xb6, 0x5b,0xbe,0x3a,0xb6,0x7c,0xc6,0xfc,0xb5,0x8e,0x21,0x49,0,0x58,0x9d,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x59,0x9d,0x8b,0,0xb9,0x84, 0x97,0x7c,0x98,0x84,0x77,0x7c,0x97,0x84,0x97,0x7c,0x97,0x7c,0x97,0x7c,0x98,0x84, 0x77,0x7c,0x98,0x84,0x97,0x7c,0x98,0x7c,0x77,0x7c,0xb9,0xa5,0x5b,0xbe,0x5b,0xbe, 0x3b,0xbe,0x5b,0xbe,0x3a,0xb6,0x5b,0xbe,0x1a,0xbe,0x7c,0xc6,0xbe,0xc6,0x13,0x43, 0x49,0,0xb4,0x63,0xff,0xff,0xff,0xff,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x59,0x9d, 0xab,0,0xff,0xce,0x9c,0xc6,0x7d,0xc6,0x9d,0xce,0x9c,0xc6,0x9d,0xc6,0x9c,0xc6, 0x9d,0xc6,0x9c,0xc6,0x9d,0xc6,0x9c,0xc6,0x9c,0xc6,0x9c,0xc6,0x9d,0xc6,0x7b,0xbe, 0x5c,0xc6,0x5b,0xbe,0x7b,0xbe,0x5b,0xbe,0x5c,0xc6,0x5b,0xbe,0x7b,0xbe,0x7b,0xbe, 0x7b,0xc6,0xde,0xce,0x57,0x74,0x6a,0,0x71,0x3a,0xff,0xf7,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0x9a,0xa5,0xec,0,0xdf,0xce,0x7b,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6, 0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6, 0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xc6, 0x7c,0xc6,0x9c,0xc6,0x7c,0xc6,0x9c,0xce,0xde,0xce,0x9b,0x9d,0x4d,0x09,0x8d,0x11, 0xfd,0xd6,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0x99,0x9d,0x2d,0x01,0xde,0xc6,0x9c,0xce,0x9c,0xc6, 0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6, 0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6, 0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9c,0xc6,0x9c,0xce,0x9b,0xc6,0x9b,0xc6,0xdd,0xce, 0x7e,0xbe,0x10,0x22,0x2d,0x01,0xdb,0x9d,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xba,0xa5,0x4e,0x01,0x1f,0xd7, 0xbc,0xce,0xbd,0xce,0x9c,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce, 0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce, 0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xce,0xbc,0xd6, 0x9c,0xce,0xdc,0xce,0xdc,0xce,0xff,0xd6,0x54,0x4b,0x6f,0x01,0x77,0x6c,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xba,0x9d, 0x6f,0x01,0x7f,0xdf,0x1d,0xdf,0xfd,0xd6,0xfd,0xde,0xfd,0xd6,0xfd,0xde,0xfc,0xd6, 0xfd,0xde,0xfd,0xd6,0xfd,0xde,0xfc,0xd6,0xfd,0xd6,0xfd,0xd6,0xfd,0xde,0xfc,0xd6, 0xfd,0xde,0xfd,0xd6,0xfd,0xde,0xfd,0xd6,0xfd,0xde,0xfd,0xd6,0xfd,0xde,0xfc,0xd6, 0xfd,0xde,0xdc,0xd6,0x1e,0xdf,0xdc,0xd6,0x3d,0xdf,0x7e,0xe7,0xdf,0xe7,0x94,0x22, 0x4e,0x01,0xb8,0xa5,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xfc,0xa5,0xb0,0x01,0xdf,0xef,0x5e,0xe7,0x3e,0xe7,0x3e,0xe7,0x5e,0xe7, 0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x5e,0xe7, 0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x5e,0xe7,0x3e,0xe7,0x3e,0xe7, 0x3e,0xe7,0x5e,0xe7,0x3e,0xdf,0x5e,0xe7,0x3d,0xdf,0x7f,0xef,0xff,0xff,0x7f,0xd7, 0xb2,0x22,0x11,0x12,0x1c,0xae,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xdb,0x9d,0xf1,0x09,0xbf,0xe7,0x7e,0xef,0x3e,0xe7, 0x5e,0xe7,0x3e,0xe7,0x3e,0xe7,0x3d,0xe7,0x5e,0xe7,0x3d,0xe7,0x5e,0xe7,0x3d,0xe7, 0x5e,0xe7,0x3d,0xe7,0x3e,0xe7,0x3e,0xe7,0x5e,0xef,0x3e,0xe7,0x5e,0xe7,0x3e,0xe7, 0x5e,0xef,0x3d,0xe7,0x5e,0xe7,0x5e,0xe7,0x5e,0xef,0x3e,0xe7,0x9e,0xef,0xff,0xff, 0x7d,0xae,0x11,0x0a,0xd3,0x2a,0x5f,0xd7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1c,0x9e,0x32,0x0a,0xdf,0xf7, 0x7e,0xf7,0x7e,0xef,0x7e,0xe7,0x7e,0xef,0x5e,0xef,0x7e,0xef,0x5e,0xef,0x7e,0xef, 0x5e,0xef,0x7e,0xef,0x7e,0xef,0x7f,0xef,0x7e,0xef,0x5e,0xef,0x7e,0xef,0x9e,0xef, 0x7e,0xef,0x7e,0xef,0x7e,0xef,0x9f,0xef,0x7e,0xef,0x7f,0xef,0x7e,0xef,0xbf,0xff, 0xff,0xff,0x7b,0x85,0x12,0x02,0xf7,0x53,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x1c,0x9e, 0x93,0x12,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xdf,0xff, 0x9f,0xf7,0x7e,0xe7,0x9f,0xf7,0x9e,0xef,0x9e,0xef,0x9e,0xef,0x7e,0xef,0x9e,0xef, 0xff,0xff,0xff,0xef,0x58,0x5c,0x73,0x0a,0x5b,0x7d,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0x3d,0xa6,0xf6,0x0a,0xfb,0x5c,0xda,0x5c,0xdb,0x64,0xdb,0x5c,0xdb,0x64, 0xdb,0x5c,0xfb,0x64,0xdb,0x5c,0xfb,0x64,0xdb,0x5c,0xfb,0x64,0xdb,0x5c,0xfb,0x64, 0x99,0x5c,0xbd,0xbe,0xdf,0xff,0xbf,0xf7,0x9f,0xef,0x9f,0xf7,0x9f,0xef,0xbf,0xef, 0xbf,0xf7,0xff,0xff,0x9f,0xd7,0xd8,0x3b,0xd5,0x12,0x7d,0xae,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0x7d,0xb6,0x18,0x44,0x37,0x44,0x59,0x44,0x38,0x44, 0x38,0x44,0x37,0x44,0x38,0x44,0x18,0x44,0x39,0x44,0x38,0x44,0x38,0x44,0x38,0x44, 0x39,0x44,0x38,0x3c,0x38,0x13,0xfc,0x95,0xff,0xff,0xbe,0xef,0xdf,0xf7,0xbe,0xf7, 0xbf,0xf7,0xbf,0xf7,0xff,0xff,0xde,0xb6,0x57,0x23,0xb7,0x2b,0x7f,0xcf,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x77,0x23,0x5d,0x9e,0xff,0xff,0xdf,0xff, 0xbf,0xf7,0xdf,0xff,0xdf,0xff,0xff,0xff,0x1d,0x8e,0x38,0x1b,0x9a,0x54,0xff,0xef, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xef,0xd9,0x2b,0x5d,0x9e, 0xff,0xff,0xbf,0xff,0xdf,0xff,0xff,0xff,0xff,0xef,0x5c,0x65,0x99,0x13,0xdc,0x7d, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7, 0xfa,0x2b,0x9e,0x9e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xe7,0xba,0x44,0xfa,0x23, 0xbe,0xa6,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xef,0x1a,0x2c,0x7e,0x96,0xff,0xff,0xff,0xff,0x3f,0xbf,0x1a,0x2c, 0x9a,0x34,0x7e,0xbf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,0x19,0x2c,0x9f,0x9e,0xff,0xff,0x7e,0x9e, 0xda,0x1b,0xfc,0x54,0xdf,0xdf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xef,0x1a,0x2c,0xdf,0x96, 0xfd,0x75,0xb9,0x13,0xdd,0x75,0xff,0xef,0xff,0xff,0xdf,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xef, 0x5b,0x2c,0x9e,0x2c,0xf9,0x1b,0x9f,0x9e,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xe7,0x5b,0x2c,0x5b,0x2c,0x5f,0xcf,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,0xb7,0x5c,0xdf,0xdf,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};

enum {
	DEBUG,
	HOME,
	MENU,
	CONFIG_FAN_SPEED,
	CONFIG_TEMP_ALARM,
	CONFIG_HUMID_ALARM,
	CONFIG_ALARM_SPEED,
	ERROR_MODE
} state = DEBUG;

double temp = 25;
double humid = 60;
double speed = 30;
int selected_element = 0;
uint8_t buffer[30];
int last_x=0, last_y=0, last_state=0;
int redraw_info = 0;

void updateTemp() {
	temp = 25;
}
void updateHumid() {
	humid = 60;
}
void updateSpeed() {
	speed = 30;
}

int last_state_was_down = 0;

void displayState() {
	static int substate = 0;
	static int last_reading = 0;
	
	if (state == DEBUG) {
		//BSP_LCD_DrawBitmap(1,60,(uint8_t*)ImageBuffer);
		if (redraw_info == 0) {
			substate = 0;
			BSP_LCD_Clear(LCD_COLOR_WHITE);
			BSP_LCD_SetTextColor(LCD_COLOR_RED);
			BSP_LCD_DisplayStringAtLine(0,(uint8_t*)"01234567890123");
		}
		if (substate%8) {
			last_reading = (int) SHT_read_humid();
		}
		
		sprintf((char*)buffer,"Tick=%08d",HAL_GetTick());
		BSP_LCD_DisplayStringAtLine(2,(uint8_t*)buffer);
		
		sprintf((char*)buffer,"X=%03d,Y=%03d", last_x, last_y);
		BSP_LCD_DisplayStringAtLine(4,(uint8_t*)buffer);
		
		sprintf((char*)buffer,"redraw=%03d ", redraw_info);
		BSP_LCD_DisplayStringAtLine(6,(uint8_t*)buffer);
		
		sprintf((char*)buffer,"LT=%03d ", last_state);
		BSP_LCD_DisplayStringAtLine(8,(uint8_t*)buffer);
		
		sprintf((char*)buffer,"was_d=%03d ", last_state_was_down);
		BSP_LCD_DisplayStringAtLine(9,(uint8_t*)buffer);
		
		sprintf((char*)buffer,"humid%c=%04d ", (substate%8)?'*':' ' , last_reading);
		BSP_LCD_DisplayStringAtLine(10,(uint8_t*)buffer);
	
		substate++;
		if (redraw_info == 0) {
			redraw_info = 1;
		} else if (redraw_info == 1) {
			redraw_info = 0;
		}
	} else if (state == HOME) {
		if (redraw_info == 0) {
			BSP_LCD_Clear(LCD_COLOR_WHITE);
			BSP_LCD_DisplayStringAtLine(1,(uint8_t*)"  DASHBOARD   ");
			redraw_info = 1;
			sprintf((char*)buffer,"  DEBUG       "); BSP_LCD_DisplayStringAtLine(8,(uint8_t*)buffer);
			sprintf((char*)buffer,"        MENU  "); BSP_LCD_DisplayStringAtLine(10,(uint8_t*)buffer);
			BSP_LCD_DrawRect(16, 185, 120, 30);
			BSP_LCD_DrawRect(120, 235, 90, 30);
		}
		sprintf((char*)buffer,"Temp  = %03.1f C", temp);
		BSP_LCD_DisplayStringAtLine(3,(uint8_t*)buffer);
		sprintf((char*)buffer,"Humid = %03.1f %%", humid);
		BSP_LCD_DisplayStringAtLine(4,(uint8_t*)buffer);
		sprintf((char*)buffer,"Veloc = %03.1f m/s", speed);
		BSP_LCD_DisplayStringAtLine(5,(uint8_t*)buffer);
	} else if (state == MENU) {
			BSP_LCD_DrawRect(10, 160, 220, 30);
			BSP_LCD_DrawRect(10, 200, 220, 30);
	} else if (state == ERROR_MODE) {
		if (redraw_info == 0) {
			BSP_LCD_Clear(LCD_COLOR_WHITE);
			BSP_LCD_DisplayStringAtLine(1,(uint8_t*)"     ERRO     ");
			redraw_info = 1;
		}
	} 
}

void updateReadings() {
	static int x = 0;
	switch (x) {
		case 0: updateTemp(); break;
		case 1: updateHumid(); break;
		case 2: updateSpeed(); break;
	}
	x++;
	HAL_Delay(10);
}

void checkAlarmState() {
	
}

typedef enum {
	TOUCH_START=1,
	TOUCH_MOVE=2,
	TOUCH_END=3
} EVENT_TYPE;

void processEvent(EVENT_TYPE type, int x, int y) {
	if (type == TOUCH_START) {
		if (state == DEBUG) {
			state = HOME;
			redraw_info = 0;
		} else if (state == HOME) {
			state = DEBUG;
			redraw_info = 0;
		}
	}
	last_x = x;
	last_y = y;
	last_state = type;
	//last_state = (type == TOUCH_START || type == TOUCH_MOVE);
	if (redraw_info == 2) {
		redraw_info = 1;
	}
}
